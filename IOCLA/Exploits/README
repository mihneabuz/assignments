Buzatu-Pahontu Mihnea-Nicolae
324CB

Tema 4 IOCLA - Exploits

1) nice
	Decompiland cu ghidra, am observat ca din main sunt apelate 5 functii dintre care 4
	care doar citeau un numar de bytes (dar nu erau exploitabile pentru ca erau alocati
	mai multi decat erau cititi) si 1 care citea intr-un buffer si apela o functie
	retinuta intr-un pointer local. Aceasta din urma arata asa:
	
	void exploitable(void)
	{
	  char buffer [267];       //buffer local de marime 267 bytes
	  code *func;              //pointer local sper o functie
	  
	  func = all_done;         //aceasta era o functie care doar oprea executia
	  read(0, buffer, 413);    //syscall citeste 413 bytes din stdin (file descriptor 0)
	  (*func)();               //apelarea functiei din variabila locala
	  return;
	}
	Functia se afla la adresa: 08049329

	Am mai descoperit la decompilare o functie "print_flag" care parea sa afiseze un
	string cryptat. Astfel am creat un payload care sa suprascrie prin buffer overflow
	variabila func cu adresa de memorie a fucntiei print_flag si am obtinut flagul:
	
	NICE_FLAG{1e94e529b864f5356207ccffbaf4ce3b}

2) naughty
	Decompiland cu ghidra, am observat ca codul este foarte asemanator cu cel de la nice.
	In functia main am gasit 4 functii care opreau executia daca nu era indeplinita o
	comparatie, asa ca am folosit buffer overflow ca sa asigur acea comparatie. In
	continuare am descoperit o functie asemanatoare cu cea exploitable de mai sus, singur
	deiferenta este ca functia apelatat la sfarsit este primita ca parametru, si a fost
	nevoie sa folosesc buffer overflow ca sa suprascriu valoarea parametrilor.
	
	NAUGHTY_FLAG{2718be40c36edac66fa15c73c08d15db}

	Bonus:
	Pentru bonus am modificat payload-ul de la naughty astfel: am adaugat un shellcode
	care executa /bin/bash inaintea adresei cu care suprasciu valoarea parametrului 
	(in locul padding-ului), si	am schimbat adresa care se executa cu adresa din varful 
	stivei. Am mai adaugat un nop slide inaintea shellcode-ului pentru a avea o sansa 
	mai mare de a nimerii adresa corecta insa am putut inghesui doar 5 nop-uri.

#am inclus in arhiva si payload-urile si scripturile pyhton cu care le-am generat
